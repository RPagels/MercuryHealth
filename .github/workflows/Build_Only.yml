name: Build_Only

###################################################################
# Environment Variables
###################################################################
env:
  # Path to the solution file relative to the root of the project.
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  #buildAssemblyVersion: '1.1.0.909'
  dotnet_version: '6.x.x'
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  Azure_Resource_Group: 'MercuryHealth-rg'
  Website_Name: 'webSite-4vwxkvpofrtbq'
  Function_AppName: 'functionApp-4vwxkvpofrtbq'
  Hosting_Plan_Name: 'appPlan-4vwxkvpofrtbq'
  Load_Test_ConfigFile: 'LoadTest_HomePage_Config.yaml'
  Load_Test_Resource: 'loadTests-4vwxkvpofrtbq'
#  Deployment_Name: MercuryHealthGroup.${{ github.workflow }}.${{ github.run_number }}

###################################################################
# Triggers - Controls when the action will run.
###################################################################
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# This workflow contains a multiple jobs: "CI", "Dev", "QA", "Prod"
###################################################################
# CI Stage 
###################################################################
jobs:
  Build_Stage_Application:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    name: Build Application
    env:
      buildAssemblyVersion: '1.1.0.909'
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      ###########################################
      # Build App
      ###########################################
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet_version }}

      - name: Generate Version Number 1
        uses: Azure/powershell@v1
        id: setBuildNumber
        env:
          POWERSHELL_TELEMETRY_OPTOUT: 1
        with:
          inlineScript: ./GenerateVersionNumber.ps1
          azPSVersion: '3.1.0'

#      - name: Generate Version Number 2
#        shell: pwsh
#        id: GenerateVersionNumber
#        run: |
#          ./GenerateVersionNumber.ps1
#          echo "buildAssemblyVersion=${{ env.buildAssemblyVersion }}.${{ steps.GenerateVersionNumber.outputs.result }}" >> $GITHUB_ENV

# echo "buildAssemblyVersion=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
#      - name: Get Build Version
#        run: |
#          Import-Module ./GenerateVersionNumber.ps1
#          Write-Host $Env:buildAssemblyVersion
#          $buildAssemblyVersion = GenerateVersionNumber -VersionString $Env:GITHUB_REF
#          echo "buildAssemblyVersion" >> $env:GITHUB_ENV
#        shell: pwsh
      
# /p:Version=${{ steps.GenerateVersionNumber.outputs.buildNumber}} /p:FileVersion=${{ steps.GenerateVersionNumber.outputs.buildNumber}}
#/p:Version="1.2.3.4" /p:FileVersion="${{ env.buildAssemblyVersion }}"
     # Run dotnet build and publish
      - name: dotnet build unit test and publish
        run: |
          dotnet restore
          dotnet build MercuryHealth.Web/MercuryHealth.Web.csproj --configuration ${{ env.buildConfiguration }} --no-restore
          dotnet publish MercuryHealth.Web/MercuryHealth.Web.csproj --configuration ${{ env.buildConfiguration }} -o './website' /p:FileVersion=${{ steps.setBuildNumber.outputs.BuildNumber}}

      ###########################################
      # Upload Artifacts
      ###########################################
      - name: Upload Build Artifacts-Website
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: MercuryHealth.Websitetest1
          path: ${{ github.workspace }}/website

