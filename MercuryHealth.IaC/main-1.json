{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "17356444721036719411"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "createdBy": {
      "type": "string",
      "defaultValue": "Randy Pagels"
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "74f644d3e665"
    },
    "releaseAnnotationGuid": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "Deployed_Environment": {
      "type": "string"
    },
    "secret_configStoreConnectionName": {
      "type": "string",
      "defaultValue": "ConnectionStringsAppConfig"
    },
    "secret_ConnectionStringName": {
      "type": "string",
      "defaultValue": "ConnectionStringsMercuryHealthWebContext"
    },
    "secret_AzureWebJobsStorageName": {
      "type": "string",
      "defaultValue": "AzureWebJobsStorage"
    },
    "secret_WebsiteContentAzureFileConnectionString": {
      "type": "string",
      "defaultValue": "WebsiteContentAzureFileConnectionString"
    },
    "contentType": {
      "type": "string",
      "defaultValue": "application/vnd.microsoft.appconfig.ff+json;charset=utf-8",
      "metadata": {
        "description": "Specifies the content type of the key-value resources. For feature flag, the value should be application/vnd.microsoft.appconfig.ff+json;charset=utf-8. For Key Value reference, the value should be application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8. Otherwise, it's optional."
      }
    },
    "ConfigkeyValueNames": {
      "type": "array",
      "defaultValue": [
        "App:Settings:FontSize",
        "App:Settings:FontColor",
        "App:Settings:BackgroundColor",
        "App:Settings:Sentinel"
      ]
    },
    "ConfigkeyKeyValues": {
      "type": "array",
      "defaultValue": [
        "13",
        "black",
        "white",
        "1"
      ]
    },
    "FeatureFlagKey1": {
      "type": "string",
      "defaultValue": "PrivacyBeta"
    },
    "FeatureFlagKey2": {
      "type": "string",
      "defaultValue": "MetricsDashboard"
    },
    "FeatureFlagKey3": {
      "type": "string",
      "defaultValue": "NutritionColor"
    },
    "FeatureFlagLabel1": {
      "type": "string",
      "defaultValue": "Privacy Beta"
    },
    "FeatureFlagLabel2": {
      "type": "string",
      "defaultValue": "Metrics Dashboard"
    },
    "FeatureFlagLabel3": {
      "type": "string",
      "defaultValue": "Nutrition Color"
    },
    "publisherEmail": {
      "type": "string",
      "defaultValue": "rpagels@microsoft.com",
      "minLength": 1
    },
    "publisherName": {
      "type": "string",
      "defaultValue": "Randy Pagels",
      "minLength": 1
    },
    "sku": {
      "type": "string",
      "defaultValue": "Developer"
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1
    },
    "swaggerType": {
      "type": "string",
      "defaultValue": "yaml-v3",
      "allowedValues": [
        "yaml-v3",
        "json-v3"
      ]
    },
    "urlToSwagger": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/RPagels/MercuryHealth/master/MercuryHealth.IaC/MercuryHealth.openapi.yaml"
    },
    "apiPath": {
      "type": "string",
      "defaultValue": ""
    },
    "name": {
      "type": "string",
      "defaultValue": "mercury-health"
    }
  },
  "functions": [],
  "variables": {
    "sqlAdminLoginName": "AzureAdmin",
    "sqlAdminLoginPassword": "[format('{0}.!&!.{1}', substring(base64(uniqueString(resourceGroup().id)), 0, 10), uniqueString(resourceGroup().id))]",
    "webAppPlanName": "[format('plan-{0}', uniqueString(resourceGroup().id))]",
    "webSiteName": "[format('app-{0}', uniqueString(resourceGroup().id))]",
    "sqlserverName": "[toLower(format('sql-{0}', uniqueString(resourceGroup().id)))]",
    "sqlDBName": "[toLower(format('sqldb-{0}', uniqueString(resourceGroup().id)))]",
    "configStoreName": "[format('appcs-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('appi-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsWorkspaceName": "[format('appw-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsAlertName": "[format('ResponseTime-{0}', uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('func-{0}', uniqueString(resourceGroup().id))]",
    "functionAppServiceName": "[format('funcplan-{0}', uniqueString(resourceGroup().id))]",
    "apiServiceName": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
    "loadTestsName": "[format('loadtests-{0}', uniqueString(resourceGroup().id))]",
    "keyvaultName": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
    "blobstorageName": "[format('stablob{0}', uniqueString(resourceGroup().id))]",
    "defaultTags": {
      "Env": "[parameters('Deployed_Environment')]",
      "App": "Mercury Health",
      "CostCenter": "[parameters('costCenter')]",
      "CreatedBy": "[parameters('createdBy')]"
    },
    "FeatureFlagValue1": {
      "id": "[parameters('FeatureFlagKey1')]",
      "description": "Description for Privacy Beta.",
      "enabled": true
    },
    "FeatureFlagValue2": {
      "id": "[parameters('FeatureFlagKey2')]",
      "description": "Description for Metrics Dashboard.",
      "enabled": false
    },
    "FeatureFlagValue3": {
      "id": "[parameters('FeatureFlagKey3')]",
      "description": "Description for Nutrition Color.",
      "enabled": false
    },
    "format": "[if(equals(parameters('swaggerType'), 'yaml-v3'), 'openapi-link', 'openapi+json-link')]"
  },
  "resources": [
    {
      "type": "Microsoft.AppConfiguration/configurationStores",
      "apiVersion": "2021-10-01-preview",
      "name": "[variables('configStoreName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('defaultTags')]",
      "properties": {
        "enablePurgeProtection": false,
        "softDeleteRetentionInDays": 7
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "copy": {
        "name": "configStoreName_keyValueNames",
        "count": "[length(parameters('ConfigkeyValueNames'))]"
      },
      "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
      "apiVersion": "2021-10-01-preview",
      "name": "[format('{0}/{1}', variables('configStoreName'), parameters('ConfigkeyValueNames')[copyIndex()])]",
      "properties": {
        "value": "[parameters('ConfigkeyKeyValues')[copyIndex()]]",
        "tags": "[variables('defaultTags')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
      ]
    },
    {
      "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
      "apiVersion": "2021-10-01-preview",
      "name": "[format('{0}/{1}', variables('configStoreName'), format('.appconfig.featureflag~2F{0}${1}', parameters('FeatureFlagKey1'), parameters('FeatureFlagLabel1')))]",
      "properties": {
        "value": "[string(variables('FeatureFlagValue1'))]",
        "contentType": "[parameters('contentType')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
      ]
    },
    {
      "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
      "apiVersion": "2021-10-01-preview",
      "name": "[format('{0}/{1}', variables('configStoreName'), format('.appconfig.featureflag~2F{0}${1}', parameters('FeatureFlagKey2'), parameters('FeatureFlagLabel2')))]",
      "properties": {
        "value": "[string(variables('FeatureFlagValue2'))]",
        "contentType": "[parameters('contentType')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
      ]
    },
    {
      "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
      "apiVersion": "2021-10-01-preview",
      "name": "[format('{0}/{1}', variables('configStoreName'), format('.appconfig.featureflag~2F{0}${1}', parameters('FeatureFlagKey3'), parameters('FeatureFlagLabel3')))]",
      "properties": {
        "value": "[string(variables('FeatureFlagValue3'))]",
        "contentType": "[parameters('contentType')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('apiServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('defaultTags')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}', variables('apiServiceName'), 'developers')]",
      "properties": {
        "scope": "/apis",
        "displayName": "Mercury Health - Developers",
        "state": "active"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}', variables('apiServiceName'), 'development')]",
      "properties": {
        "approvalRequired": false,
        "state": "published",
        "subscriptionRequired": true,
        "subscriptionsLimit": 1,
        "description": "Product used for Mercury Health Development Teams",
        "displayName": "Mercury Health - Developers",
        "terms": "These are the terms of use ..."
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products/policies",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('apiServiceName'), 'development', 'policy')]",
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <rate-limit calls=\"5\" renewal-period=\"60\" />\r\n    <quota calls=\"100\" renewal-period=\"604800\" />\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiServiceName'), 'development')]",
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}', variables('apiServiceName'), variables('appInsightsName'))]",
      "properties": {
        "loggerType": "applicationInsights",
        "description": "Mercury Health Application Insights instance.",
        "resourceId": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_applicationInsightsID.value]",
        "credentials": {
          "instrumentationKey": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsInstrumentationKey.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}', variables('apiServiceName'), 'pet-store-swagger')]",
      "properties": {
        "format": "swagger-link-json",
        "value": "http://petstore.swagger.io/v2/swagger.json",
        "path": "petstore",
        "description": "Pet Store Swagger Import Example"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}', variables('apiServiceName'), parameters('name'))]",
      "properties": {
        "format": "[variables('format')]",
        "value": "[parameters('urlToSwagger')]",
        "path": "[parameters('apiPath')]",
        "displayName": "Mercury Health",
        "serviceUrl": "[format('https://{0}.azurewebsites.net/', variables('webSiteName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2017-03-01",
      "name": "[format('{0}/{1}/{2}', variables('apiServiceName'), 'development', 'mercury-health')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/{1}', variables('apiServiceName'), parameters('name')), '/')[0], split(format('{0}/{1}', variables('apiServiceName'), parameters('name')), '/')[1])]",
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiServiceName'), 'development')]",
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('apiServiceName'), 'pet-store-swagger', 'applicationinsights')]",
      "properties": {
        "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiServiceName'), variables('appInsightsName'))]",
        "alwaysLog": "allErrors",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100
        },
        "verbosity": "information",
        "httpCorrelationProtocol": "Legacy",
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiServiceName'), variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('apiServiceName'), 'mercury-health', 'applicationinsights')]",
      "properties": {
        "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiServiceName'), variables('appInsightsName'))]",
        "alwaysLog": "allErrors",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100
        },
        "verbosity": "information",
        "httpCorrelationProtocol": "Legacy",
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apiServiceName'), variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2017-03-01",
      "name": "[format('{0}/{1}', variables('apiServiceName'), 'exampleUser1')]",
      "properties": {
        "firstName": "ExampleFirstName1",
        "lastName": "ExampleLastName1",
        "email": "ExampleFirst1@example.com",
        "state": "active",
        "note": "note for example user 1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2017-03-01",
      "name": "[format('{0}/{1}', variables('apiServiceName'), 'examplesubscription1')]",
      "properties": {
        "displayName": "exampleUser1DisplayName",
        "productId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/products/exampleProduct",
        "userId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/users/exampleUser1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiServiceName'), 'development')]",
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/users', variables('apiServiceName'), 'exampleUser1')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('keyvaultName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vaultName": {
            "value": "[variables('keyvaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "8703538281164349611"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vaultName": {
              "type": "string"
            },
            "tenant": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {
                "ipRules": [],
                "virtualNetworkRules": []
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('vaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[parameters('tenant')]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableSoftDelete": false,
                "accessPolicies": "[parameters('accessPolicies')]",
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "networkAcls": "[parameters('networkAcls')]"
              }
            }
          ],
          "outputs": {
            "proxyKey": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('vaultName')), '2021-11-01-preview', 'full')]"
            },
            "keyvaultName": {
              "type": "string",
              "value": "[parameters('vaultName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "webappdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppPlanName": {
            "value": "[variables('webAppPlanName')]"
          },
          "webSiteName": {
            "value": "[variables('webSiteName')]"
          },
          "resourceGroupName": {
            "value": "[resourceGroup().name]"
          },
          "Deployed_Environment": {
            "value": "[parameters('Deployed_Environment')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsConnectionString.value]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "sqlAdminLoginName": {
            "value": "[variables('sqlAdminLoginName')]"
          },
          "sqlAdminLoginPassword": {
            "value": "[variables('sqlAdminLoginPassword')]"
          },
          "sqlDBName": {
            "value": "[variables('sqlDBName')]"
          },
          "sqlserverfullyQualifiedDomainName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sqldbdeploy'), '2020-06-01').outputs.sqlserverfullyQualifiedDomainName.value]"
          },
          "sqlserverName": {
            "value": "[variables('sqlserverName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "15104096612305384564"
            }
          },
          "parameters": {
            "skuName": {
              "type": "string",
              "defaultValue": "S1"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "Deployed_Environment": {
              "type": "string"
            },
            "sqlserverName": {
              "type": "string"
            },
            "sqlserverfullyQualifiedDomainName": {
              "type": "string"
            },
            "sqlDBName": {
              "type": "string"
            },
            "sqlAdminLoginPassword": {
              "type": "secureString"
            },
            "sqlAdminLoginName": {
              "type": "secureString"
            },
            "webAppPlanName": {
              "type": "string"
            },
            "webSiteName": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "appInsightsName": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "functions": [],
          "variables": {
            "secretConnectionString": "[format('Server=tcp:{0},1433;Initial Catalog={1};Persist Security Info=False;User Id={2}@{3};Password={4};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', parameters('sqlserverfullyQualifiedDomainName'), parameters('sqlDBName'), parameters('sqlAdminLoginName'), parameters('sqlserverName'), parameters('sqlAdminLoginPassword'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "[parameters('webAppPlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "properties": {},
              "sku": {
                "name": "[parameters('skuName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "healthCheckPath": "/healthy"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('webSiteName'), 'appsettings')]",
              "properties": {
                "DeployedEnvironment": "[parameters('Deployed_Environment')]",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "WebAppUrl": "[format('https://{0}.azurewebsites.net/', parameters('webSiteName'))]",
                "ASPNETCORE_ENVIRONMENT": "Development",
                "DebugOnly-sqlAdminLoginPassword=": "[parameters('sqlAdminLoginPassword')]",
                "DebugOnly-sqlAdminLoginName=": "[parameters('sqlAdminLoginName')]",
                "DebugOnly-sqlConnectionString=": "[variables('secretConnectionString')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/webtests",
              "apiVersion": "2020-10-05-preview",
              "name": "Page Home",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().id, parameters('resourceGroupName'), parameters('appInsightsName'))]": "Resource"
              },
              "kind": "ping",
              "properties": {
                "SyntheticMonitorId": "[parameters('appInsightsName')]",
                "Name": "Page Home",
                "Description": null,
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "standard",
                "RetryEnabled": true,
                "Locations": [
                  {
                    "Id": "us-va-ash-azr"
                  },
                  {
                    "Id": "us-fl-mia-edge"
                  },
                  {
                    "Id": "us-ca-sjc-azr"
                  },
                  {
                    "Id": "emea-au-syd-edge"
                  },
                  {
                    "Id": "apac-jp-kaw-edge"
                  }
                ],
                "Configuration": null,
                "Request": {
                  "RequestUrl": "[format('https://{0}.azurewebsites.net/', parameters('webSiteName'))]",
                  "Headers": null,
                  "HttpVerb": "GET",
                  "RequestBody": null,
                  "ParseDependentRequests": false,
                  "FollowRedirects": null
                },
                "ValidationRules": {
                  "ExpectedHttpStatusCode": 200,
                  "IgnoreHttpsStatusCode": false,
                  "ContentValidation": null,
                  "SSLCheck": true,
                  "SSLCertRemainingLifetimeCheck": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/webtests",
              "apiVersion": "2020-10-05-preview",
              "name": "Page Nutritions",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().id, parameters('resourceGroupName'), parameters('appInsightsName'))]": "Resource"
              },
              "kind": "ping",
              "properties": {
                "SyntheticMonitorId": "[parameters('appInsightsName')]",
                "Name": "Page Nutritions",
                "Description": null,
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "standard",
                "RetryEnabled": true,
                "Locations": [
                  {
                    "Id": "us-va-ash-azr"
                  },
                  {
                    "Id": "us-fl-mia-edge"
                  },
                  {
                    "Id": "us-ca-sjc-azr"
                  },
                  {
                    "Id": "emea-au-syd-edge"
                  },
                  {
                    "Id": "apac-jp-kaw-edge"
                  }
                ],
                "Configuration": null,
                "Request": {
                  "RequestUrl": "[format('https://{0}.azurewebsites.net/Nutritions/', parameters('webSiteName'))]",
                  "Headers": null,
                  "HttpVerb": "GET",
                  "RequestBody": null,
                  "ParseDependentRequests": false,
                  "FollowRedirects": null
                },
                "ValidationRules": {
                  "ExpectedHttpStatusCode": 200,
                  "IgnoreHttpsStatusCode": false,
                  "ContentValidation": null,
                  "SSLCheck": true,
                  "SSLCertRemainingLifetimeCheck": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/webtests",
              "apiVersion": "2020-10-05-preview",
              "name": "Page Exercises",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().id, parameters('resourceGroupName'), parameters('appInsightsName'))]": "Resource"
              },
              "kind": "ping",
              "properties": {
                "SyntheticMonitorId": "[parameters('appInsightsName')]",
                "Name": "Page Exercises",
                "Description": null,
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "standard",
                "RetryEnabled": true,
                "Locations": [
                  {
                    "Id": "us-va-ash-azr"
                  },
                  {
                    "Id": "us-fl-mia-edge"
                  },
                  {
                    "Id": "us-ca-sjc-azr"
                  },
                  {
                    "Id": "emea-au-syd-edge"
                  },
                  {
                    "Id": "apac-jp-kaw-edge"
                  }
                ],
                "Configuration": null,
                "Request": {
                  "RequestUrl": "[format('https://{0}.azurewebsites.net/Exercises/', parameters('webSiteName'))]",
                  "Headers": null,
                  "HttpVerb": "GET",
                  "RequestBody": null,
                  "ParseDependentRequests": false,
                  "FollowRedirects": null
                },
                "ValidationRules": {
                  "ExpectedHttpStatusCode": 200,
                  "IgnoreHttpsStatusCode": false,
                  "ContentValidation": null,
                  "SSLCheck": true,
                  "SSLCertRemainingLifetimeCheck": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            }
          ],
          "outputs": {
            "out_appService": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
            },
            "out_webSiteName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName'))).defaultHostName]"
            },
            "out_appServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName')), '2021-03-01', 'full').identity.principalId]"
            },
            "out_secretConnectionString": {
              "type": "string",
              "value": "[variables('secretConnectionString')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'sqldbdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "sqldbdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlserverName": {
            "value": "[variables('sqlserverName')]"
          },
          "sqlDBName": {
            "value": "[variables('sqlDBName')]"
          },
          "sqlAdminLoginName": {
            "value": "[variables('sqlAdminLoginName')]"
          },
          "sqlAdminLoginPassword": {
            "value": "[variables('sqlAdminLoginPassword')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "15081827046054640125"
            }
          },
          "parameters": {
            "sqlserverName": {
              "type": "string"
            },
            "sqlDBName": {
              "type": "string"
            },
            "sqlAdminLoginName": {
              "type": "secureString"
            },
            "sqlAdminLoginPassword": {
              "type": "secureString"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('sqlserverName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "administratorLogin": "[parameters('sqlAdminLoginName')]",
                "administratorLoginPassword": "[parameters('sqlAdminLoginPassword')]"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlserverName'), parameters('sqlDBName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
              },
              "properties": {
                "requestedBackupStorageRedundancy": "Local",
                "zoneRedundant": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/AllowAllWindowsAzureIps', parameters('sqlserverName'))]",
              "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
              ]
            }
          ],
          "outputs": {
            "sqlserverfullyQualifiedDomainName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))).fullyQualifiedDomainName]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "appinsightsdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "appInsightsAlertName": {
            "value": "[variables('appInsightsAlertName')]"
          },
          "appInsightsWorkspaceName": {
            "value": "[variables('appInsightsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "6206901012013598652"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "appInsightsName": {
              "type": "string"
            },
            "appInsightsWorkspaceName": {
              "type": "string"
            },
            "appInsightsAlertName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('appInsightsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[parameters('appInsightsAlertName')]",
              "location": "global",
              "properties": {
                "description": "Response time alert",
                "severity": 0,
                "enabled": true,
                "scopes": [
                  "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                  "allOf": [
                    {
                      "name": "1st criterion",
                      "metricName": "requests/duration",
                      "operator": "GreaterThan",
                      "threshold": 300,
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ]
                },
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
                "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2021-09-01",
              "name": "[format('ag--{0}', uniqueString(resourceGroup().id))]",
              "location": "global",
              "properties": {
                "groupShortName": "Randy Pagels",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "Randy Pagels",
                    "emailAddress": "rpagels@microsoft.com",
                    "useCommonAlertSchema": true
                  }
                ]
              }
            }
          ],
          "outputs": {
            "out_applicationInsightsID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
            },
            "out_appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
            },
            "out_appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ConnectionString]"
            },
            "out_appInsightsApplicationId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ApplicationId]"
            },
            "out_appInsightsAPIApplicationId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).AppId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "functionappdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "functionAppServiceName": {
            "value": "[variables('functionAppServiceName')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "2508293482836293576"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "functionAppName": {
              "type": "string"
            },
            "functionAppServiceName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "functions": [],
          "variables": {
            "storageAccountName": "[format('sta{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "tags": "[parameters('defaultTags')]",
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "[parameters('functionAppServiceName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
              },
              "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[format('{0}.azurewebsites.net', parameters('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm.azurewebsites.net', parameters('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServiceName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'web')]",
              "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[format('${0}', parameters('functionAppName'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                  {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                  }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                  "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                  "allowedOrigins": [
                    "https://functions.azure.com",
                    "https://functions-staging.azure.com",
                    "https://functions-next.azure.com"
                  ],
                  "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), format('{0}.azurewebsites.net', parameters('functionAppName')))]",
              "properties": {
                "siteName": "[parameters('functionAppName')]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            }
          ],
          "outputs": {
            "out_funcAppServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01', 'full').identity.principalId]"
            },
            "out_AzureWebJobsStorage": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('loadTestsName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "loadTestsName": {
            "value": "[variables('loadTestsName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "6313404639602617321"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "loadTestsName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.LoadTestService/loadTests",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('loadTestsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "description": "Azure Load Testing Service"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('blobstorageName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('blobstorageName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "17235352942641554708"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string",
              "defaultValue": "images"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "configSettings",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "secret_configStoreConnectionName": {
            "value": "[parameters('secret_configStoreConnectionName')]"
          },
          "secret_configStoreConnectionValue": {
            "value": "[listKeys(resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName')), '2021-10-01-preview').value[0].connectionString]"
          },
          "secret_ConnectionStringName": {
            "value": "[parameters('secret_ConnectionStringName')]"
          },
          "secret_ConnectionStringValue": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webappdeploy'), '2020-06-01').outputs.out_secretConnectionString.value]"
          },
          "appServiceprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webappdeploy'), '2020-06-01').outputs.out_appServiceprincipalId.value]"
          },
          "webappName": {
            "value": "[variables('webSiteName')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "funcAppServiceprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionappdeploy'), '2020-06-01').outputs.out_funcAppServiceprincipalId.value]"
          },
          "secret_AzureWebJobsStorageName": {
            "value": "[parameters('secret_AzureWebJobsStorageName')]"
          },
          "secret_AzureWebJobsStorageValue": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionappdeploy'), '2020-06-01').outputs.out_AzureWebJobsStorage.value]"
          },
          "secret_WebsiteContentAzureFileConnectionStringName": {
            "value": "[parameters('secret_WebsiteContentAzureFileConnectionString')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsConnectionString.value]"
          },
          "Deployed_Environment": {
            "value": "[parameters('Deployed_Environment')]"
          },
          "ApimSubscriptionKey": {
            "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', variables('apiServiceName'), 'developers'), '2021-12-01-preview').primaryKey]"
          },
          "ApimWebServiceURL": {
            "value": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))).gatewayUrl]"
          },
          "apiServiceName": {
            "value": "[variables('apiServiceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "5607324795579384853"
            }
          },
          "parameters": {
            "keyvaultName": {
              "type": "string"
            },
            "secret_configStoreConnectionName": {
              "type": "string"
            },
            "secret_ConnectionStringName": {
              "type": "string"
            },
            "webappName": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "secret_AzureWebJobsStorageName": {
              "type": "string"
            },
            "secret_WebsiteContentAzureFileConnectionStringName": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "Deployed_Environment": {
              "type": "string"
            },
            "ApimSubscriptionKey": {
              "type": "string"
            },
            "ApimWebServiceURL": {
              "type": "string"
            },
            "apiServiceName": {
              "type": "string"
            },
            "secret_configStoreConnectionValue": {
              "type": "secureString"
            },
            "secret_ConnectionStringValue": {
              "type": "secureString"
            },
            "appServiceprincipalId": {
              "type": "secureString"
            },
            "funcAppServiceprincipalId": {
              "type": "secureString"
            },
            "secret_AzureWebJobsStorageValue": {
              "type": "secureString"
            },
            "tenant": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('appServiceprincipalId')]",
                  "permissions": {
                    "keys": [
                      "Get",
                      "List"
                    ],
                    "secrets": [
                      "Get",
                      "List"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('funcAppServiceprincipalId')]",
                  "permissions": {
                    "keys": [
                      "Get",
                      "List"
                    ],
                    "secrets": [
                      "Get",
                      "List"
                    ]
                  }
                }
              ]
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), 'add')]",
              "properties": {
                "accessPolicies": "[parameters('accessPolicies')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('secret_configStoreConnectionName'))]",
              "properties": {
                "value": "[parameters('secret_configStoreConnectionValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('secret_ConnectionStringName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('secret_ConnectionStringValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('secret_AzureWebJobsStorageName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('secret_AzureWebJobsStorageValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('secret_WebsiteContentAzureFileConnectionStringName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('secret_AzureWebJobsStorageValue')]"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('webappName'), 'appsettings')]",
              "properties": {
                "ConnectionStrings:MercuryHealthWebContext": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('secret_ConnectionStringName'))]",
                "ConnectionStrings:AppConfig": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('secret_configStoreConnectionName'))]",
                "DeployedEnvironment": "[parameters('Deployed_Environment')]",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "WebAppUrl": "[format('https://{0}.azurewebsites.net/', parameters('webappName'))]",
                "ASPNETCORE_ENVIRONMENT": "Development",
                "Debug_Only-secret_ConnectionStringValue=": "[parameters('secret_ConnectionStringValue')]",
                "Debug_Only-secret_configStoreConnectionValue": "[parameters('secret_configStoreConnectionValue')]",
                "Debug_Only-secret_AzureWebJobsStorageValue": "[parameters('secret_AzureWebJobsStorageValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('secret_configStoreConnectionName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('secret_ConnectionStringName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'appsettings')]",
              "kind": "string",
              "properties": {
                "AzureWebJobsStorage": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('secret_AzureWebJobsStorageName'))]",
                "WebsiteContentAzureFileConnectionString": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('secret_WebsiteContentAzureFileConnectionStringName'))]",
                "DebugOnly-secret_ConnectionStringValue=": "[parameters('secret_AzureWebJobsStorageValue')]",
                "ApimSubscriptionKey": "[parameters('ApimSubscriptionKey')]",
                "ApimWebServiceURL": "[parameters('ApimWebServiceURL')]",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "FUNCTIONS_EXTENSION_VERSION": "~4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('secret_AzureWebJobsStorageName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('secret_WebsiteContentAzureFileConnectionStringName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/subscriptions', variables('apiServiceName'), 'developers')]",
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]",
        "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('configStoreName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'functionappdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyvaultName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'webappdeploy')]"
      ]
    }
  ],
  "outputs": {
    "out_webSiteName": {
      "type": "string",
      "value": "[variables('webSiteName')]"
    },
    "out_sqlserverName": {
      "type": "string",
      "value": "[variables('sqlserverName')]"
    },
    "out_sqlDBName": {
      "type": "string",
      "value": "[variables('sqlDBName')]"
    },
    "out_sqlserverFQName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sqldbdeploy'), '2020-06-01').outputs.sqlserverfullyQualifiedDomainName.value]"
    },
    "out_configStoreName": {
      "type": "string",
      "value": "[variables('configStoreName')]"
    },
    "out_appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "out_functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "out_apiServiceName": {
      "type": "string",
      "value": "[variables('apiServiceName')]"
    },
    "out_loadTestsName": {
      "type": "string",
      "value": "[variables('loadTestsName')]"
    },
    "out_keyvaultName": {
      "type": "string",
      "value": "[variables('keyvaultName')]"
    },
    "out_secretConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webappdeploy'), '2020-06-01').outputs.out_secretConnectionString.value]"
    },
    "out_appInsightsApplicationId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsApplicationId.value]"
    },
    "out_appInsightsAPIApplicationId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-06-01').outputs.out_appInsightsAPIApplicationId.value]"
    },
    "out_releaseAnnotationGuidID": {
      "type": "string",
      "value": "[parameters('releaseAnnotationGuid')]"
    }
  }
}